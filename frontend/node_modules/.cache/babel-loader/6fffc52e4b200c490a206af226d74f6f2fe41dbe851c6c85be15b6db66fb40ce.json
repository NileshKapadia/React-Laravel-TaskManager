{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Typography, Button, Box, CircularProgress, Alert } from '@mui/material';\nimport TaskList from '../components/TaskList';\nimport TaskForm from '../components/TaskForm';\nimport { getProject, createTask } from '../api';\nconst ProjectDetailPage = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [taskRefresh, setTaskRefresh] = useState(false); // Add this line\n\n  useEffect(() => {\n    const fetchProject = async () => {\n      try {\n        setLoading(true);\n        const response = await getProject(projectId);\n        setProject(response.data);\n        setError(null);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching project:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load project');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProject();\n  }, [projectId, taskRefresh]); // Add taskRefresh to dependencies\n\n  const handleCreateTask = async taskData => {\n    try {\n      await createTask(projectId, taskData);\n      setShowTaskForm(false);\n      setTaskRefresh(!taskRefresh); // Trigger refresh\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n\n  // ... rest of your component remains the same ...\n};\n_s(ProjectDetailPage, \"Iu0SUsNB2eOLfZMMAS9WrvOYo/M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetailPage;\nexport default ProjectDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Typography","Button","Box","CircularProgress","Alert","TaskList","TaskForm","getProject","createTask","ProjectDetailPage","_s","projectId","navigate","project","setProject","showTaskForm","setShowTaskForm","loading","setLoading","error","setError","taskRefresh","setTaskRefresh","fetchProject","response","data","err","_err$response","_err$response$data","console","message","handleCreateTask","taskData","_c","$RefreshReg$"],"sources":["C:/Laravel-React-TaskManager/frontend/src/pages/ProjectDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, Button, Box, CircularProgress, Alert } from '@mui/material';\r\nimport TaskList from '../components/TaskList';\r\nimport TaskForm from '../components/TaskForm';\r\nimport { getProject, createTask } from '../api';\r\n\r\nconst ProjectDetailPage = () => {\r\n  const { projectId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [project, setProject] = useState(null);\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [taskRefresh, setTaskRefresh] = useState(false); // Add this line\r\n\r\n  useEffect(() => {\r\n    const fetchProject = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getProject(projectId);\r\n        setProject(response.data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error fetching project:', err);\r\n        setError(err.response?.data?.message || 'Failed to load project');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProject();\r\n  }, [projectId, taskRefresh]); // Add taskRefresh to dependencies\r\n\r\n  const handleCreateTask = async (taskData) => {\r\n    try {\r\n      await createTask(projectId, taskData);\r\n      setShowTaskForm(false);\r\n      setTaskRefresh(!taskRefresh); // Trigger refresh\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  // ... rest of your component remains the same ...\r\n};\r\n\r\nexport default ProjectDetailPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,eAAe;AAC3F,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,UAAU,EAAEC,UAAU,QAAQ,QAAQ;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAU,CAAC,GAAGd,SAAS,CAAC,CAAC;EACjC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAM2B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMM,QAAQ,GAAG,MAAMjB,UAAU,CAACI,SAAS,CAAC;QAC5CG,UAAU,CAACU,QAAQ,CAACC,IAAI,CAAC;QACzBL,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOM,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAEO,GAAG,CAAC;QAC7CN,QAAQ,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACF,QAAQ,cAAAG,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,wBAAwB,CAAC;MACnE,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACZ,SAAS,EAAEU,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE9B,MAAMU,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF,MAAMxB,UAAU,CAACG,SAAS,EAAEqB,QAAQ,CAAC;MACrChB,eAAe,CAAC,KAAK,CAAC;MACtBM,cAAc,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;AACF,CAAC;AAACT,EAAA,CAtCID,iBAAiB;EAAA,QACCZ,SAAS,EACdC,WAAW;AAAA;AAAAmC,EAAA,GAFxBxB,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}