{"ast":null,"code":"var _jsxFileName = \"C:\\\\Laravel-React-TaskManager\\\\frontend\\\\src\\\\pages\\\\ProjectDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Typography, Button, Box, CircularProgress } from '@mui/material';\nimport TaskList from '../components/TaskList';\nimport TaskForm from '../components/TaskForm';\nimport { getProject } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetailPage = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let isMounted = true; // Add flag to track component mount status\n\n    const fetchProject = async () => {\n      try {\n        const response = await getProject(projectId);\n        if (isMounted) {\n          setProject(response.data);\n          setError(null);\n        }\n      } catch (err) {\n        console.error('Error fetching project:', err);\n        if (isMounted) {\n          var _err$response;\n          setError('Failed to load project');\n          // Only navigate if the project doesn't exist\n          if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404) {\n            navigate('/');\n          }\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false);\n        }\n      }\n    };\n    fetchProject();\n    return () => {\n      isMounted = false; // Cleanup function\n    };\n  }, [projectId, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Project not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      children: project.description || 'No description available'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      projectId: projectId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetailPage, \"st+TfvsSjAkXNJrCOupE41Ddq9E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetailPage;\nexport default ProjectDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Typography","Button","Box","CircularProgress","TaskList","TaskForm","getProject","jsxDEV","_jsxDEV","ProjectDetailPage","_s","projectId","navigate","project","setProject","loading","setLoading","error","setError","isMounted","fetchProject","response","data","err","console","_err$response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","gutterBottom","name","paragraph","description","_c","$RefreshReg$"],"sources":["C:/Laravel-React-TaskManager/frontend/src/pages/ProjectDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, Button, Box, CircularProgress } from '@mui/material';\r\nimport TaskList from '../components/TaskList';\r\nimport TaskForm from '../components/TaskForm';\r\nimport { getProject } from '../api';\r\n\r\nconst ProjectDetailPage = () => {\r\n  const { projectId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [project, setProject] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // Add flag to track component mount status\r\n\r\n    const fetchProject = async () => {\r\n      try {\r\n        const response = await getProject(projectId);\r\n        if (isMounted) {\r\n          setProject(response.data);\r\n          setError(null);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching project:', err);\r\n        if (isMounted) {\r\n          setError('Failed to load project');\r\n          // Only navigate if the project doesn't exist\r\n          if (err.response?.status === 404) {\r\n            navigate('/');\r\n          }\r\n        }\r\n      } finally {\r\n        if (isMounted) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchProject();\r\n\r\n    return () => {\r\n      isMounted = false; // Cleanup function\r\n    };\r\n  }, [projectId, navigate]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <CircularProgress />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Typography color=\"error\">{error}</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!project) {\r\n    return (\r\n      <Container>\r\n        <Typography>Project not found</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        {project.name}\r\n      </Typography>\r\n      <Typography variant=\"body1\" paragraph>\r\n        {project.description || 'No description available'}\r\n      </Typography>\r\n\r\n      <TaskList projectId={projectId} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProjectDetailPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,gBAAgB,QAAQ,eAAe;AACpF,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAU,CAAC,GAAGd,SAAS,CAAC,CAAC;EACjC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAIuB,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEtB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,UAAU,CAACK,SAAS,CAAC;QAC5C,IAAIQ,SAAS,EAAE;UACbL,UAAU,CAACO,QAAQ,CAACC,IAAI,CAAC;UACzBJ,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZC,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEM,GAAG,CAAC;QAC7C,IAAIJ,SAAS,EAAE;UAAA,IAAAM,aAAA;UACbP,QAAQ,CAAC,wBAAwB,CAAC;UAClC;UACA,IAAI,EAAAO,aAAA,GAAAF,GAAG,CAACF,QAAQ,cAAAI,aAAA,uBAAZA,aAAA,CAAcC,MAAM,MAAK,GAAG,EAAE;YAChCd,QAAQ,CAAC,GAAG,CAAC;UACf;QACF;MACF,CAAC,SAAS;QACR,IAAIO,SAAS,EAAE;UACbH,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAEDI,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACR,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAEzB,IAAIG,OAAO,EAAE;IACX,oBACEP,OAAA,CAACT,SAAS;MAAA4B,QAAA,eACRnB,OAAA,CAACL,gBAAgB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEhB;EAEA,IAAId,KAAK,EAAE;IACT,oBACET,OAAA,CAACT,SAAS;MAAA4B,QAAA,eACRnB,OAAA,CAACR,UAAU;QAACgC,KAAK,EAAC,OAAO;QAAAL,QAAA,EAAEV;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEhB;EAEA,IAAI,CAAClB,OAAO,EAAE;IACZ,oBACEL,OAAA,CAACT,SAAS;MAAA4B,QAAA,eACRnB,OAAA,CAACR,UAAU;QAAA2B,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEhB;EAEA,oBACEvB,OAAA,CAACT,SAAS;IAAA4B,QAAA,gBACRnB,OAAA,CAACR,UAAU;MAACiC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAP,QAAA,EAClCd,OAAO,CAACsB;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACbvB,OAAA,CAACR,UAAU;MAACiC,OAAO,EAAC,OAAO;MAACG,SAAS;MAAAT,QAAA,EAClCd,OAAO,CAACwB,WAAW,IAAI;IAA0B;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAEbvB,OAAA,CAACJ,QAAQ;MAACO,SAAS,EAAEA;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEhB,CAAC;AAACrB,EAAA,CA5EID,iBAAiB;EAAA,QACCZ,SAAS,EACdC,WAAW;AAAA;AAAAwC,EAAA,GAFxB7B,iBAAiB;AA8EvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}