{"ast":null,"code":"var _jsxFileName = \"C:\\\\Laravel-React-TaskManager\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, ListItem, ListItemText, Checkbox, Button, Box, Typography } from '@mui/material';\nimport { getTasks, deleteTask, updateTask } from '../api';\nimport { fetchTasks } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  projectId\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, [projectId]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks(projectId);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleDelete = async taskId => {\n    try {\n      await deleteTask(projectId, taskId);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleToggleComplete = async task => {\n    try {\n      await updateTask(projectId, task.id, {\n        completed: !task.completed\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: task.completed,\n          onChange: () => handleToggleComplete(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: task.title,\n          secondary: task.description,\n          sx: {\n            textDecoration: task.completed ? 'line-through' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","List","ListItem","ListItemText","Checkbox","Button","Box","Typography","getTasks","deleteTask","updateTask","fetchTasks","jsxDEV","_jsxDEV","TaskList","projectId","_s","tasks","setTasks","response","data","error","console","handleDelete","taskId","handleToggleComplete","task","id","completed","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","divider","checked","onChange","primary","title","secondary","description","sx","textDecoration","color","onClick","_c","$RefreshReg$"],"sources":["C:/Laravel-React-TaskManager/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, ListItem, ListItemText, Checkbox, Button, Box, Typography } from '@mui/material';\r\nimport { getTasks, deleteTask, updateTask } from '../api';\r\nimport { fetchTasks } from '../api'; \r\n\r\nconst TaskList = ({ projectId }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [projectId]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks(projectId);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (taskId) => {\r\n    try {\r\n      await deleteTask(projectId, taskId);\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  const handleToggleComplete = async (task) => {\r\n    try {\r\n      await updateTask(projectId, task.id, { completed: !task.completed });\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Tasks\r\n      </Typography>\r\n      <List>\r\n        {tasks.map((task) => (\r\n          <ListItem key={task.id} divider>\r\n            <Checkbox\r\n              checked={task.completed}\r\n              onChange={() => handleToggleComplete(task)}\r\n            />\r\n            <ListItemText\r\n              primary={task.title}\r\n              secondary={task.description}\r\n              sx={{ textDecoration: task.completed ? 'line-through' : 'none' }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={() => handleDelete(task.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}